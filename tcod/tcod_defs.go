package tcod

/*
 #include "include/libtcod.h"
*/
import "C"

/* console enums */
const (
	BkgndAdd        = C.TCOD_BKGND_ADD
	BkgndAdda       = C.TCOD_BKGND_ADDA
	BkgndAlph       = C.TCOD_BKGND_ALPH
	BkgndBurn       = C.TCOD_BKGND_BURN
	BkgndColorBurn  = C.TCOD_BKGND_COLOR_BURN
	BkgndColorDodge = C.TCOD_BKGND_COLOR_DODGE
	BkgndDarken     = C.TCOD_BKGND_DARKEN
	BkgndLighten    = C.TCOD_BKGND_LIGHTEN
	BkgndMultiply   = C.TCOD_BKGND_MULTIPLY
	BkgndNone       = C.TCOD_BKGND_NONE
	BkgndOverlay    = C.TCOD_BKGND_OVERLAY
	BkgndScreen     = C.TCOD_BKGND_SCREEN
	BkgndSet        = C.TCOD_BKGND_SET
)

const (
	CHAR_ARROW2_E       = C.TCOD_CHAR_ARROW2_E
	CHAR_ARROW2_N       = C.TCOD_CHAR_ARROW2_N
	CHAR_ARROW2_S       = C.TCOD_CHAR_ARROW2_S
	CHAR_ARROW2_W       = C.TCOD_CHAR_ARROW2_W
	CHAR_ARROW_E        = C.TCOD_CHAR_ARROW_E
	CHAR_ARROW_N        = C.TCOD_CHAR_ARROW_N
	CHAR_ARROW_S        = C.TCOD_CHAR_ARROW_S
	CHAR_ARROW_W        = C.TCOD_CHAR_ARROW_W
	CHAR_BLOCK1         = C.TCOD_CHAR_BLOCK1
	CHAR_BLOCK2         = C.TCOD_CHAR_BLOCK2
	CHAR_BLOCK3         = C.TCOD_CHAR_BLOCK3
	CHAR_CHECKBOX_SET   = C.TCOD_CHAR_CHECKBOX_SET
	CHAR_CHECKBOX_UNSET = C.TCOD_CHAR_CHECKBOX_UNSET
	CHAR_CROSS          = C.TCOD_CHAR_CROSS
	CHAR_DARROW_H       = C.TCOD_CHAR_DARROW_H
	CHAR_DARROW_V       = C.TCOD_CHAR_DARROW_V
	CHAR_DCROSS         = C.TCOD_CHAR_DCROSS
	CHAR_DHLINE         = C.TCOD_CHAR_DHLINE
	CHAR_DNE            = C.TCOD_CHAR_DNE
	CHAR_DNW            = C.TCOD_CHAR_DNW
	CHAR_DSE            = C.TCOD_CHAR_DSE
	CHAR_DSW            = C.TCOD_CHAR_DSW
	CHAR_DTEEE          = C.TCOD_CHAR_DTEEE
	CHAR_DTEEN          = C.TCOD_CHAR_DTEEN
	CHAR_DTEES          = C.TCOD_CHAR_DTEES
	CHAR_DTEEW          = C.TCOD_CHAR_DTEEW
	CHAR_DVLINE         = C.TCOD_CHAR_DVLINE
	CHAR_HLINE          = C.TCOD_CHAR_HLINE
	CHAR_NE             = C.TCOD_CHAR_NE
	CHAR_NW             = C.TCOD_CHAR_NW
	CHAR_RADIO_SET      = C.TCOD_CHAR_RADIO_SET
	CHAR_RADIO_UNSET    = C.TCOD_CHAR_RADIO_UNSET
	CHAR_SE             = C.TCOD_CHAR_SE
	CHAR_SUBP_DIAG      = C.TCOD_CHAR_SUBP_DIAG
	CHAR_SUBP_E         = C.TCOD_CHAR_SUBP_E
	CHAR_SUBP_N         = C.TCOD_CHAR_SUBP_N
	CHAR_SUBP_NE        = C.TCOD_CHAR_SUBP_NE
	CHAR_SUBP_NW        = C.TCOD_CHAR_SUBP_NW
	CHAR_SUBP_SE        = C.TCOD_CHAR_SUBP_SE
	CHAR_SUBP_SW        = C.TCOD_CHAR_SUBP_SW
	CHAR_SW             = C.TCOD_CHAR_SW
	CHAR_TEEE           = C.TCOD_CHAR_TEEE
	CHAR_TEEN           = C.TCOD_CHAR_TEEN
	CHAR_TEES           = C.TCOD_CHAR_TEES
	CHAR_TEEW           = C.TCOD_CHAR_TEEW
	CHAR_VLINE          = C.TCOD_CHAR_VLINE
)

const (
	COLCTRL_1        = C.TCOD_COLCTRL_1
	COLCTRL_2        = C.TCOD_COLCTRL_2
	COLCTRL_3        = C.TCOD_COLCTRL_3
	COLCTRL_4        = C.TCOD_COLCTRL_4
	COLCTRL_5        = C.TCOD_COLCTRL_5
	COLCTRL_BACK_RGB = C.TCOD_COLCTRL_BACK_RGB
	COLCTRL_FORE_RGB = C.TCOD_COLCTRL_FORE_RGB
	COLCTRL_NUMBER   = C.TCOD_COLCTRL_NUMBER
	COLCTRL_STOP     = C.TCOD_COLCTRL_STOP
)

const (
	FontLayoutASCIIInCol = C.TCOD_FONT_LAYOUT_ASCII_INCOL
	FontLayoutASCIIInRow = C.TCOD_FONT_LAYOUT_ASCII_INROW
	FontLayoutTCOD       = C.TCOD_FONT_LAYOUT_TCOD
	FontTypeGreyscale    = C.TCOD_FONT_TYPE_GREYSCALE
)

/* fov enums */

const (
	FOVBasic        = C.FOV_BASIC
	FOVDiamond      = C.FOV_DIAMOND
	FOVShadow       = C.FOV_SHADOW
	FOVPermissive0  = C.FOV_PERMISSIVE_0
	FOVPermissive1  = C.FOV_PERMISSIVE_1
	FOVPermissive2  = C.FOV_PERMISSIVE_2
	FOVPermissive3  = C.FOV_PERMISSIVE_3
	FOVPermissive4  = C.FOV_PERMISSIVE_4
	FOVPermissive5  = C.FOV_PERMISSIVE_5
	FOVPermissive6  = C.FOV_PERMISSIVE_6
	FOVPermissive7  = C.FOV_PERMISSIVE_7
	FOVPermissive8  = C.FOV_PERMISSIVE_8
	FOVRestrictive  = C.FOV_RESTRICTIVE
	NbFOVAlgorithms = C.NB_FOV_ALGORITHMS
)

/* random enums */

const (
	RNG_MT   = C.TCOD_RNG_MT
	RNG_CMWC = C.TCOD_RNG_CMWC
)

const (
	TYPE_NONE        = C.TCOD_TYPE_NONE
	TYPE_BOOL        = C.TCOD_TYPE_BOOL
	TYPE_CHAR        = C.TCOD_TYPE_CHAR
	TYPE_INT         = C.TCOD_TYPE_INT
	TYPE_FLOAT       = C.TCOD_TYPE_FLOAT
	TYPE_STRING      = C.TCOD_TYPE_STRING
	TYPE_COLOR       = C.TCOD_TYPE_COLOR
	TYPE_DICE        = C.TCOD_TYPE_DICE
	TYPE_VALUELIST00 = C.TCOD_TYPE_VALUELIST00
	TYPE_VALUELIST01 = C.TCOD_TYPE_VALUELIST01
	TYPE_VALUELIST02 = C.TCOD_TYPE_VALUELIST02
	TYPE_VALUELIST03 = C.TCOD_TYPE_VALUELIST03
	TYPE_VALUELIST04 = C.TCOD_TYPE_VALUELIST04
	TYPE_VALUELIST05 = C.TCOD_TYPE_VALUELIST05
	TYPE_VALUELIST06 = C.TCOD_TYPE_VALUELIST06
	TYPE_VALUELIST07 = C.TCOD_TYPE_VALUELIST07
	TYPE_VALUELIST08 = C.TCOD_TYPE_VALUELIST08
	TYPE_VALUELIST09 = C.TCOD_TYPE_VALUELIST09
	TYPE_VALUELIST10 = C.TCOD_TYPE_VALUELIST10
	TYPE_VALUELIST11 = C.TCOD_TYPE_VALUELIST11
	TYPE_VALUELIST12 = C.TCOD_TYPE_VALUELIST12
	TYPE_VALUELIST13 = C.TCOD_TYPE_VALUELIST13
	TYPE_VALUELIST14 = C.TCOD_TYPE_VALUELIST14
	TYPE_VALUELIST15 = C.TCOD_TYPE_VALUELIST15
	TYPE_CUSTOM00    = C.TCOD_TYPE_CUSTOM00
	TYPE_CUSTOM01    = C.TCOD_TYPE_CUSTOM01
	TYPE_CUSTOM02    = C.TCOD_TYPE_CUSTOM02
	TYPE_CUSTOM03    = C.TCOD_TYPE_CUSTOM03
	TYPE_CUSTOM04    = C.TCOD_TYPE_CUSTOM04
	TYPE_CUSTOM05    = C.TCOD_TYPE_CUSTOM05
	TYPE_CUSTOM06    = C.TCOD_TYPE_CUSTOM06
	TYPE_CUSTOM07    = C.TCOD_TYPE_CUSTOM07
	TYPE_CUSTOM08    = C.TCOD_TYPE_CUSTOM08
	TYPE_CUSTOM09    = C.TCOD_TYPE_CUSTOM09
	TYPE_CUSTOM10    = C.TCOD_TYPE_CUSTOM10
	TYPE_CUSTOM11    = C.TCOD_TYPE_CUSTOM11
	TYPE_CUSTOM12    = C.TCOD_TYPE_CUSTOM12
	TYPE_CUSTOM13    = C.TCOD_TYPE_CUSTOM13
	TYPE_CUSTOM14    = C.TCOD_TYPE_CUSTOM14
	TYPE_CUSTOM15    = C.TCOD_TYPE_CUSTOM15
	TYPE_LIST        = C.TCOD_TYPE_LIST
)

/* noise enum */

const (
	NOISE_PERLIN  = C.TCOD_NOISE_PERLIN
	NOISE_SIMPLEX = C.TCOD_NOISE_SIMPLEX
	NOISE_WAVELET = C.TCOD_NOISE_WAVELET
	NOISE_DEFAULT = C.TCOD_NOISE_DEFAULT
)

/* renderer enum */
const (
	GLSL        = C.TCOD_RENDERER_GLSL
	OpenGL      = C.TCOD_RENDERER_OPENGL
	SDL         = C.TCOD_RENDERER_SDL
	SDL2        = C.TCOD_RENDERER_SDL2
	OpenGL2     = C.TCOD_RENDERER_OPENGL2
	NBRenderers = C.TCOD_NB_RENDERERS
)

/* alignment enum */
const (
	Left   = C.TCOD_LEFT
	Right  = C.TCOD_RIGHT
	Center = C.TCOD_CENTER
)

/* distribution for mersenne */
const (
	DistributionLinear               = C.TCOD_DISTRIBUTION_LINEAR
	DistributionGaussian             = C.TCOD_DISTRIBUTION_GAUSSIAN
	DistributionGaussianRange        = C.TCOD_DISTRIBUTION_GAUSSIAN_RANGE
	DistributionGaussianInverse      = C.TCOD_DISTRIBUTION_GAUSSIAN_INVERSE
	DistributionGaussianRangeInverse = C.TCOD_DISTRIBUTION_GAUSSIAN_RANGE_INVERSE
)

const (
	EventKeyPress      = 1
	EventKeyRelease    = 2
	EventKey           = 3
	EventMouseMove     = 4
	EventMousePress    = 8
	EventMouseRelease  = 16
	EventMouse         = 28
	EventFingerMove    = 32
	EventFingerPress   = 64
	EventFingerRelease = 128
	EventFinger        = 224
	EventAny           = 255
)
